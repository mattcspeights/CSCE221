        -:    0:Source:binary_search_tree_tests.cpp
        -:    0:Graph:binary_search_tree_tests.gcno
        -:    0:Data:binary_search_tree_tests.gcda
        -:    0:Runs:1
        -:    1:#include <iostream>
        -:    2:#include "binary_search_tree.h"
        -:    3:
        -:    4:using std::cout, std::endl;
        -:    5:
        1:    6:int main() {
        2:    7:    BinarySearchTree<int> test1;
        1:    8:    test1.insert(5);
        1:    9:    test1.insert(2);
        1:   10:    test1.insert(6);
        1:   11:    test1.print_tree();
        2:   12:    BinarySearchTree test2 = test1;
        2:   13:    BinarySearchTree test3(test1);
        1:   14:    test1.remove(6);
        1:   15:    test1.remove(5);
        1:   16:    test1.remove(2);
        1:   17:    test2.print_tree();
        1:   18:    cout << test3.find_max() << endl;
        1:   19:    cout << test3.find_min() << endl;
        1:   20:    if (test3.contains(2)){
        1:   21:        cout << "working" << endl;
        -:   22:    }
        1:   23:    test3.insert(10);
        1:   24:    test3.insert(1);
        1:   25:    test3.insert(7);
        1:   26:    test3.insert(8);
        1:   27:    test3.insert(3);
        1:   28:    test3.insert(9);
        1:   29:    test3.remove(5);
        1:   30:    test3.remove(8);
        1:   31:    test3.remove(2);
        1:   32:    test3.remove(1);
        1:   33:    test3.remove(3);
        1:   34:    test3.remove(6);
        1:   35:}
